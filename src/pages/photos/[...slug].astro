---
import { getCollection, render } from "astro:content";
import Layout from "../../components/Layout.astro";
import { getImageAspectRatiosArray } from "../../utils/getImageAspectRatios";

export async function getStaticPaths() {
  const posts = await getCollection("photos");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);

// Get aspect ratios for images if they exist
const imageAspectRatios = post.data.photos
  ? await getImageAspectRatiosArray(post.data.photos)
  : [];

const dateOptions: object = {
  year: "numeric",
  month: "long",
  day: "numeric",
};
---

<Layout title={post.data.title}>
  <article
    class="sm:col-span-2 lg:col-span-10 lg:col-start-3 lg:row-start-2 mb-64"
  >
    <header class="mb-8">
      <h1 class="text-4xl lg:text-6xl font-semibold">{post.data.title}</h1>
      <h3 class="mt-8 text-lg lg:text-xl text-white/70">
        {new Date(post.data.date).toLocaleDateString("en-GB", dateOptions)}
      </h3>
    </header>
    <div class="prose text-lg lg:text-xl mb-8 text-pretty">
      <Content />
    </div>
    {
      post.data.photos !== undefined && (
        <div class="md:col-start-2 md:col-span-3 w-full relative grid grid-cols-6 items-start bg-white p-1">
          {imageAspectRatios.map((imageData) => (
            <img
              class={`border-4 rounded-xs self-stretch object-cover ${imageData.aspectRatio > 1 ? "col-span-4" : "col-span-2"}`}
              alt=""
              id={`image-${imageData.cloudflareId}`}
              src={`https://imagedelivery.net/tfgleCjJafHVtd2F4ngDnQ/${imageData.cloudflareId}/small`}
              srcset={`https://imagedelivery.net/tfgleCjJafHVtd2F4ngDnQ/${imageData.cloudflareId}/small 400w, https://imagedelivery.net/tfgleCjJafHVtd2F4ngDnQ/${imageData.cloudflareId}/medium 1024w, https://imagedelivery.net/tfgleCjJafHVtd2F4ngDnQ/${imageData.cloudflareId}/large 2048w`}
              style={`aspect-ratio: ${imageData.aspectRatio}`}
              loading="lazy"
            />
          ))}
        </div>
      )
    }
  </article>
</Layout>
